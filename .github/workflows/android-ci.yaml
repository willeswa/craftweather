name: Android CI

on:
  pull_request:
    branches:
      - main  # Trigger CI on PRs targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Use checkout v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Use JDK 17 for Android development
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew  # Make the Gradle wrapper executable

      - name: Build the project
        run: ./gradlew assembleDebug  # Build the debug APK

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk  # Path to the debug APK

      - name: Get PR number
        id: pr
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            return pr.number;

      - name: Add APK download link to PR comment
        uses: actions/github-script@v6
        with:
          script: |
            const { data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            const artifact = artifacts.artifacts.find(art => art.name === 'app-debug');
            if (artifact) {
              const downloadUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/suites/${context.runId}/artifacts/${artifact.id}`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ steps.pr.outputs.result }},
                body: `ðŸš€ APK is ready for testing! Download it [here](${downloadUrl}).`,
              });
            }