name: Android CI

on:
  pull_request:
    branches:
      - main  # Trigger CI on PRs targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    permissions:
      contents: write
      pull-requests: write
      actions: read  # Required to access artifact download URLs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Use checkout v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Use JDK 17 for Android development
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew  # Make the Gradle wrapper executable

      - name: Build the project
        run: ./gradlew assembleDebug  # Build the debug APK

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4  # Use v4 to avoid deprecation warnings
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk  # Path to the debug APK

      - name: Get PR number
        id: pr
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            return pr.number;

      - name: Generate direct download link for artifact
        id: artifact
        uses: actions/github-script@v6
        with:
          script: |
            const { data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });

            const artifact = artifacts.artifacts.find(art => art.name === 'app-debug');
            if (artifact) {
              const { data: download } = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
              return download.url;
            }

      - name: Add APK download link to PR comment
        uses: actions/github-script@v6
        with:
          script: |
            const downloadUrl = '${{ steps.artifact.outputs.result }}';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.pr.outputs.result }},
              body: `
              âœ¨ **Hello there!** âœ¨
              
              Your APK is ready and waiting for you! ðŸš€
              
              ðŸ“² **Download the APK here:** [Download APK](${downloadUrl})
              
              This build was crafted with care, tested with precision, and is now ready for your review. Feel free to test it out and let us know how it performs! ðŸ’«
            
            ---
            
            **Pro Tip:** If you encounter any issues or have feedback, don't hesitate to drop a comment below. We're here to make this the best experience possible! ðŸŒŸ
              
              Happy testing! ðŸŽ‰
              `,
              });